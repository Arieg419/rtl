{"ast":null,"code":"import _classCallCheck from \"/Users/omergoldberg/dev/rtl/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/omergoldberg/dev/rtl/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/omergoldberg/dev/rtl/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/omergoldberg/dev/rtl/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/omergoldberg/dev/rtl/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/omergoldberg/dev/rtl/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport { Animated, View, StyleSheet } from 'react-native';\nimport color from 'color';\nimport { RadioButtonContext } from './RadioButtonGroup';\nimport { handlePress, isChecked } from './utils';\nimport TouchableRipple from '../TouchableRipple';\nimport { withTheme } from '../../core/theming';\nvar BORDER_WIDTH = 2;\n/**\n * Radio buttons allow the selection a single option from a set.\n * This component follows platform guidelines for Android.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/radio-enabled.android.png\" />\n *     <figcaption>Enabled</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/radio-disabled.android.png\" />\n *     <figcaption>Disabled</figcaption>\n *   </figure>\n * </div>\n */\n\nvar RadioButtonAndroid = /*#__PURE__*/function (_React$Component) {\n  _inherits(RadioButtonAndroid, _React$Component);\n\n  var _super = _createSuper(RadioButtonAndroid);\n\n  function RadioButtonAndroid() {\n    var _this;\n\n    _classCallCheck(this, RadioButtonAndroid);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      borderAnim: new Animated.Value(BORDER_WIDTH),\n      radioAnim: new Animated.Value(1)\n    });\n\n    return _this;\n  }\n\n  _createClass(RadioButtonAndroid, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.status === this.props.status) {\n        return;\n      }\n\n      var scale = this.props.theme.animation.scale;\n\n      if (this.props.status === 'checked') {\n        this.state.radioAnim.setValue(1.2);\n        Animated.timing(this.state.radioAnim, {\n          toValue: 1,\n          duration: 150 * scale,\n          useNativeDriver: true\n        }).start();\n      } else {\n        this.state.borderAnim.setValue(10);\n        Animated.timing(this.state.borderAnim, {\n          toValue: BORDER_WIDTH,\n          duration: 150 * scale,\n          useNativeDriver: false\n        }).start();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          disabled = _this$props.disabled,\n          onPress = _this$props.onPress,\n          theme = _this$props.theme,\n          value = _this$props.value,\n          status = _this$props.status,\n          rest = _objectWithoutProperties(_this$props, [\"disabled\", \"onPress\", \"theme\", \"value\", \"status\"]);\n\n      var checkedColor = this.props.color || theme.colors.accent;\n      var uncheckedColor = this.props.uncheckedColor || color(theme.colors.text).alpha(theme.dark ? 0.7 : 0.54).rgb().string();\n      var rippleColor, radioColor;\n      return /*#__PURE__*/React.createElement(RadioButtonContext.Consumer, null, function (context) {\n        var checked = isChecked({\n          contextValue: context === null || context === void 0 ? void 0 : context.value,\n          status: status,\n          value: value\n        }) === 'checked';\n\n        if (disabled) {\n          rippleColor = color(theme.colors.text).alpha(0.16).rgb().string();\n          radioColor = theme.colors.disabled;\n        } else {\n          rippleColor = color(checkedColor).fade(0.32).rgb().string();\n          radioColor = checked ? checkedColor : uncheckedColor;\n        }\n\n        return /*#__PURE__*/React.createElement(TouchableRipple, _extends({}, rest, {\n          borderless: true,\n          rippleColor: rippleColor,\n          onPress: disabled ? undefined : function () {\n            handlePress({\n              onPress: onPress,\n              onValueChange: context === null || context === void 0 ? void 0 : context.onValueChange,\n              value: value\n            });\n          },\n          accessibilityTraits: disabled ? ['button', 'disabled'] : 'button',\n          accessibilityComponentType: checked ? 'radiobutton_checked' : 'radiobutton_unchecked',\n          accessibilityRole: \"button\",\n          accessibilityState: {\n            disabled: disabled\n          },\n          accessibilityLiveRegion: \"polite\",\n          style: styles.container\n        }), /*#__PURE__*/React.createElement(Animated.View, {\n          style: [styles.radio, {\n            borderColor: radioColor,\n            borderWidth: _this2.state.borderAnim\n          }]\n        }, checked ? /*#__PURE__*/React.createElement(View, {\n          style: [StyleSheet.absoluteFill, styles.radioContainer]\n        }, /*#__PURE__*/React.createElement(Animated.View, {\n          style: [styles.dot, {\n            backgroundColor: radioColor,\n            transform: [{\n              scale: _this2.state.radioAnim\n            }]\n          }]\n        })) : null));\n      });\n    }\n  }]);\n\n  return RadioButtonAndroid;\n}(React.Component);\n\n_defineProperty(RadioButtonAndroid, \"displayName\", 'RadioButton.Android');\n\nvar styles = StyleSheet.create({\n  container: {\n    borderRadius: 18\n  },\n  radioContainer: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  radio: {\n    height: 20,\n    width: 20,\n    borderRadius: 10,\n    margin: 8\n  },\n  dot: {\n    height: 10,\n    width: 10,\n    borderRadius: 5\n  }\n});\nexport default withTheme(RadioButtonAndroid); // @component-docs ignore-next-line\n\nexport { RadioButtonAndroid };","map":null,"metadata":{},"sourceType":"module"}