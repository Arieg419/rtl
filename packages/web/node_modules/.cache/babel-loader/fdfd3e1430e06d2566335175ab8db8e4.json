{"ast":null,"code":"import _classCallCheck from \"/Users/omergoldberg/dev/rtl/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/omergoldberg/dev/rtl/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/omergoldberg/dev/rtl/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/omergoldberg/dev/rtl/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/omergoldberg/dev/rtl/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/omergoldberg/dev/rtl/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nexport var ListAccordionGroupContext = /*#__PURE__*/React.createContext(null);\n/**\n * List.AccordionGroup allows to control a group of List Accordions. Id prop for List.Accordion is required in order to group to work.\n * List.AccordionGroup can be controlled or uncontrolled component. Example shows uncontrolled version.\n * At most one Accordion will be expanded in given time.\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/list-accordion-group.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View, Text } from 'react-native';\n * import { List } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <List.AccordionGroup>\n *     <List.Accordion title=\"Accordion 1\" id=\"1\">\n *       <List.Item title=\"Item 1\" />\n *     </List.Accordion>\n *     <List.Accordion title=\"Accordion 2\" id=\"2\">\n *       <List.Item title=\"Item 2\" />\n *     </List.Accordion>\n *     <View>\n *       <Text>\n *         List.Accordion can be wrapped because implementation uses React.Context.\n *       </Text>\n *       <List.Accordion title=\"Accordion 3\" id=\"3\">\n *         <List.Item title=\"Item 3\" />\n *       </List.Accordion>\n *     </View>\n *   </List.AccordionGroup>\n * );\n *\n * export default MyComponent;\n *```\n */\n\nvar ListAccordionGroup = /*#__PURE__*/function (_React$Component) {\n  _inherits(ListAccordionGroup, _React$Component);\n\n  var _super = _createSuper(ListAccordionGroup);\n\n  function ListAccordionGroup() {\n    var _this;\n\n    _classCallCheck(this, ListAccordionGroup);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      expandedId: undefined\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onAccordionPress\", function (expandedId) {\n      _this.setState(function (_ref) {\n        var currentExpandedId = _ref.expandedId;\n        return {\n          expandedId: currentExpandedId === expandedId ? undefined : expandedId\n        };\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(ListAccordionGroup, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          expandedId = _this$props.expandedId,\n          onAccordionPress = _this$props.onAccordionPress,\n          children = _this$props.children;\n      return /*#__PURE__*/React.createElement(ListAccordionGroupContext.Provider, {\n        value: {\n          expandedId: expandedId || this.state.expandedId,\n          // component can be controlled or uncontrolled\n          onAccordionPress: onAccordionPress || this.onAccordionPress\n        }\n      }, children);\n    }\n  }]);\n\n  return ListAccordionGroup;\n}(React.Component);\n\n_defineProperty(ListAccordionGroup, \"displayName\", 'List.AccordionGroup');\n\nexport default ListAccordionGroup;","map":null,"metadata":{},"sourceType":"module"}