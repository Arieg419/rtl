{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = __importDefault(require(\"react\"));\n\nvar react_native_1 = require(\"react-native\");\n\nvar SearchTags_1 = __importDefault(require(\"./SearchTags\"));\n\nvar randomDate = function randomDate(start, end) {\n  return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\n};\n\nvar getFormattedDate = function getFormattedDate(date) {\n  var year = date.getFullYear();\n  var month = (1 + date.getMonth()).toString();\n  month = month.length > 1 ? month : \"0\" + month;\n  var day = date.getDate().toString();\n  day = day.length > 1 ? day : \"0\" + day;\n  return month + \"/\" + day + \"/\" + year;\n};\n\nvar categoryItems = [{\n  title: \"Omer\",\n  tags: [{\n    title: \"Cardio\",\n    bgColor: \"\"\n  }],\n  lastUpdated: \"Last update: \" + getFormattedDate(randomDate(new Date(2018, 0, 1), new Date())),\n  resources: Math.ceil(Math.random() * 10)\n}, {\n  title: \"Gastroentorology\",\n  tags: [{\n    title: \"Cardio\",\n    bgColor: \"\"\n  }],\n  lastUpdated: \"Last update: \" + getFormattedDate(randomDate(new Date(2018, 0, 1), new Date())),\n  resources: Math.ceil(Math.random() * 10)\n}, {\n  title: \"Nephrology\",\n  tags: [{\n    title: \"Cardio\",\n    bgColor: \"\"\n  }],\n  lastUpdated: \"Last update: \" + getFormattedDate(randomDate(new Date(2018, 0, 1), new Date())),\n  resources: Math.ceil(Math.random() * 10)\n}, {\n  title: \"Cardio\",\n  tags: [{\n    title: \"Cardio\",\n    bgColor: \"\"\n  }],\n  lastUpdated: \"Last update: \" + getFormattedDate(randomDate(new Date(2018, 0, 1), new Date())),\n  resources: Math.ceil(Math.random() * 10)\n}, {\n  title: \"Covid\",\n  tags: [{\n    title: \"Cardio\",\n    bgColor: \"\"\n  }],\n  lastUpdated: \"Last update: \" + getFormattedDate(randomDate(new Date(2018, 0, 1), new Date())),\n  resources: Math.ceil(Math.random() * 10)\n}, {\n  title: \"Endocrinology\",\n  tags: [{\n    title: \"Cardio\",\n    bgColor: \"\"\n  }],\n  lastUpdated: \"Last update: \" + getFormattedDate(randomDate(new Date(2018, 0, 1), new Date())),\n  resources: Math.ceil(Math.random() * 10)\n}, {\n  title: \"Blood analysis\",\n  tags: [{\n    title: \"Cardio\",\n    bgColor: \"\"\n  }],\n  lastUpdated: \"Last update: \" + getFormattedDate(randomDate(new Date(2018, 0, 1), new Date())),\n  resources: Math.ceil(Math.random() * 10)\n}, {\n  title: \"Dialysis\",\n  tags: [{\n    title: \"Cardio\",\n    bgColor: \"\"\n  }],\n  lastUpdated: \"Last update: \" + getFormattedDate(randomDate(new Date(2018, 0, 1), new Date())),\n  resources: Math.ceil(Math.random() * 10)\n}, {\n  title: \"Trauma\",\n  tags: [{\n    title: \"Cardio\",\n    bgColor: \"\"\n  }],\n  lastUpdated: \"Last update: \" + getFormattedDate(randomDate(new Date(2018, 0, 1), new Date())),\n  resources: Math.ceil(Math.random() * 10)\n}, {\n  title: \"Managing up\",\n  tags: [{\n    title: \"Cardio\",\n    bgColor: \"\"\n  }],\n  lastUpdated: \"\",\n  resources: Math.ceil(Math.random() * 10)\n}];\n\nvar Searchbar =\n/** @class */\nfunction (_super) {\n  __extends(Searchbar, _super);\n\n  function Searchbar() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      searchBarFocused: false,\n      data: categoryItems\n    };\n\n    _this.renderSeparator = function () {\n      return react_1.default.createElement(react_native_1.View, {\n        style: {\n          height: 1,\n          width: \"100%\",\n          backgroundColor: \"#CED0CE\"\n        }\n      });\n    };\n\n    _this.searchItems = function (text) {\n      if (text.length === 0) {\n        _this.setState({\n          data: categoryItems,\n          value: \"Search\"\n        });\n\n        return;\n      }\n\n      var newData = _this.state.data.filter(function (item) {\n        var itemData = \"\" + item.title.toUpperCase();\n        var textData = text.toUpperCase();\n\n        if (text.length > 0) {\n          return itemData.indexOf(textData) > -1;\n        }\n      });\n\n      _this.setState({\n        data: newData,\n        value: text\n      });\n    };\n\n    _this.keyboardDidShow = function () {\n      _this.setState({\n        searchBarFocused: true\n      });\n    };\n\n    _this.keyboardWillShow = function () {\n      _this.setState({\n        searchBarFocused: true\n      });\n    };\n\n    _this.keyboardWillHide = function () {\n      _this.setState({\n        searchBarFocused: false\n      });\n    };\n\n    return _this;\n  }\n\n  Searchbar.prototype.render = function () {\n    return react_1.default.createElement(react_native_1.View, {\n      style: {\n        flex: 1\n      }\n    }, react_1.default.createElement(react_native_1.View, {\n      style: {\n        height: 80,\n        backgroundColor: \"#c0deed\",\n        justifyContent: \"center\",\n        paddingHorizontal: 5\n      }\n    }, react_1.default.createElement(react_native_1.View, {\n      style: {\n        height: 50,\n        backgroundColor: \"white\",\n        flexDirection: \"row\",\n        padding: 5,\n        alignItems: \"center\"\n      }\n    }, react_1.default.createElement(react_native_1.View, null), react_1.default.createElement(react_native_1.TextInput, {\n      placeholder: \"Search\",\n      style: {\n        fontSize: 24,\n        marginLeft: 15,\n        flex: 1\n      },\n      onChangeText: this.searchItems\n    }))), react_1.default.createElement(react_native_1.FlatList, {\n      style: {\n        backgroundColor: this.state.searchBarFocused ? \"rgba(0,0,0,0.3)\" : \"white\"\n      },\n      data: this.state.data,\n      renderItem: function renderItem(_a) {\n        var item = _a.item;\n        return react_1.default.createElement(react_native_1.View, null, react_1.default.createElement(react_native_1.Text, {\n          style: {\n            padding: 20,\n            paddingBottom: 5,\n            fontSize: 20\n          }\n        }, item.title), react_1.default.createElement(react_native_1.Text, {\n          style: {\n            paddingLeft: 20,\n            padding: 4,\n            fontSize: 14\n          }\n        }, Math.ceil(Math.random() * 10) + \" resources\"), react_1.default.createElement(react_native_1.Text, {\n          style: {\n            paddingLeft: 20,\n            padding: 4,\n            fontSize: 14\n          }\n        }), react_1.default.createElement(react_native_1.Text, {\n          style: {\n            paddingLeft: 20,\n            paddingTop: 5,\n            fontSize: 15\n          }\n        }, \"Tags:\"), react_1.default.createElement(react_native_1.View, {\n          style: {\n            flexDirection: \"row\",\n            paddingLeft: 20,\n            paddingTop: 10,\n            paddingBottom: 10,\n            justifyContent: \"flex-start\"\n          }\n        }, react_1.default.createElement(SearchTags_1.default, null), react_1.default.createElement(SearchTags_1.default, null), react_1.default.createElement(SearchTags_1.default, null)));\n      },\n      ItemSeparatorComponent: this.renderSeparator,\n      keyExtractor: function keyExtractor(item, index) {\n        return index.toString();\n      }\n    }));\n  };\n\n  return Searchbar;\n}(react_1.default.Component);\n\nexports.default = Searchbar;","map":null,"metadata":{},"sourceType":"script"}