{"ast":null,"code":"import _classCallCheck from \"/Users/omergoldberg/dev/rtl/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/omergoldberg/dev/rtl/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/omergoldberg/dev/rtl/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/omergoldberg/dev/rtl/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/omergoldberg/dev/rtl/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { withTheme } from '../../core/theming';\nimport { RadioButtonContext } from './RadioButtonGroup';\nimport { handlePress } from './utils';\nimport TouchableRipple from '../TouchableRipple';\nimport RadioButton from './RadioButton';\nimport Text from '../Typography/Text';\n/**\n * RadioButton.Item allows you to press the whole row (item) instead of only the RadioButton.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/radio-item.ios.png\" />\n *     <figcaption>Pressed</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { RadioButton } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [value, setValue] = React.useState('first');\n *\n *   return (\n *     <RadioButton.Group onValueChange={value => setValue(value)} value={value}>\n *       <RadioButton.Item label=\"First item\" value=\"first\" />\n *       <RadioButton.Item label=\"Second item\" value=\"second\" />\n *     </RadioButton.Group>\n *   );\n * };\n *\n * export default MyComponent;\n *```\n */\n\nvar RadioButtonItem = /*#__PURE__*/function (_React$Component) {\n  _inherits(RadioButtonItem, _React$Component);\n\n  var _super = _createSuper(RadioButtonItem);\n\n  function RadioButtonItem() {\n    _classCallCheck(this, RadioButtonItem);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(RadioButtonItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          value = _this$props.value,\n          label = _this$props.label,\n          style = _this$props.style,\n          labelStyle = _this$props.labelStyle,\n          onPress = _this$props.onPress,\n          disabled = _this$props.disabled,\n          color = _this$props.color,\n          uncheckedColor = _this$props.uncheckedColor,\n          status = _this$props.status,\n          colors = _this$props.theme.colors,\n          accessibilityLabel = _this$props.accessibilityLabel;\n      return /*#__PURE__*/React.createElement(RadioButtonContext.Consumer, null, function (context) {\n        return /*#__PURE__*/React.createElement(TouchableRipple, {\n          onPress: disabled ? undefined : function () {\n            return handlePress({\n              onPress: onPress,\n              onValueChange: context === null || context === void 0 ? void 0 : context.onValueChange,\n              value: value\n            });\n          },\n          accessibilityLabel: accessibilityLabel\n        }, /*#__PURE__*/React.createElement(View, {\n          style: [styles.container, style],\n          pointerEvents: \"none\"\n        }, /*#__PURE__*/React.createElement(Text, {\n          style: [styles.label, {\n            color: colors.text\n          }, labelStyle]\n        }, label), /*#__PURE__*/React.createElement(RadioButton, {\n          value: value,\n          disabled: disabled,\n          status: status,\n          color: color,\n          uncheckedColor: uncheckedColor\n        })));\n      });\n    }\n  }]);\n\n  return RadioButtonItem;\n}(React.Component);\n\n_defineProperty(RadioButtonItem, \"displayName\", 'RadioButton.Item');\n\nexport default withTheme(RadioButtonItem); // @component-docs ignore-next-line\n\nexport { RadioButtonItem };\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingVertical: 8,\n    paddingHorizontal: 16\n  },\n  label: {\n    fontSize: 16\n  }\n});","map":null,"metadata":{},"sourceType":"module"}