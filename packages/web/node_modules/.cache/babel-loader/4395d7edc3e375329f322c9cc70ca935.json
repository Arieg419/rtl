{"ast":null,"code":"import _defineProperty from \"/Users/omergoldberg/dev/rtl/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport React from 'react';\nimport color from 'color';\nimport { Text, StyleSheet, Animated } from 'react-native';\nimport { withTheme } from '../../../core/theming';\nimport { AdornmentSide } from './enums';\nvar AFFIX_OFFSET = 12;\nvar AffixContext = /*#__PURE__*/React.createContext({\n  textStyle: {\n    fontFamily: '',\n    color: ''\n  },\n  topPosition: null,\n  side: AdornmentSide.Left\n});\nexport var AffixAdornment = function AffixAdornment(_ref) {\n  var affix = _ref.affix,\n      side = _ref.side,\n      textStyle = _ref.textStyle,\n      topPosition = _ref.topPosition,\n      onLayout = _ref.onLayout,\n      visible = _ref.visible;\n  return /*#__PURE__*/React.createElement(AffixContext.Provider, {\n    value: {\n      side: side,\n      textStyle: textStyle,\n      topPosition: topPosition,\n      onLayout: onLayout,\n      visible: visible\n    }\n  }, affix);\n};\n\nvar TextInputAffix = function TextInputAffix(_ref2) {\n  var text = _ref2.text,\n      theme = _ref2.theme;\n\n  var _React$useContext = React.useContext(AffixContext),\n      textStyle = _React$useContext.textStyle,\n      onLayout = _React$useContext.onLayout,\n      topPosition = _React$useContext.topPosition,\n      side = _React$useContext.side,\n      visible = _React$useContext.visible;\n\n  var textColor = color(theme.colors.text).alpha(theme.dark ? 0.7 : 0.54).rgb().string();\n\n  var style = _defineProperty({\n    top: topPosition\n  }, side, AFFIX_OFFSET);\n\n  return /*#__PURE__*/React.createElement(Animated.View, {\n    style: [styles.container, style, {\n      opacity: (visible === null || visible === void 0 ? void 0 : visible.interpolate({\n        inputRange: [0, 1],\n        outputRange: [1, 0]\n      })) || 1\n    }],\n    onLayout: onLayout\n  }, /*#__PURE__*/React.createElement(Text, {\n    style: [{\n      color: textColor\n    }, textStyle]\n  }, text));\n};\n\nTextInputAffix.displayName = 'TextInput.Affix';\nvar styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\nexport default withTheme(TextInputAffix); // @component-docs ignore-next-line\n\nexport { TextInputAffix };","map":null,"metadata":{},"sourceType":"module"}