{"ast":null,"code":"import _classCallCheck from \"/Users/omergoldberg/dev/rtl/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/omergoldberg/dev/rtl/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/omergoldberg/dev/rtl/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/omergoldberg/dev/rtl/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/omergoldberg/dev/rtl/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport color from 'color';\nimport * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport Icon from '../Icon';\nimport TouchableRipple from '../TouchableRipple';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\nimport { black, white } from '../../styles/colors';\n/**\n * A component to show a single list item inside a Menu.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/menu-item.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Menu } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <View style={{ flex: 1 }}>\n *     <Menu.Item icon=\"redo\" onPress={() => {}} title=\"Redo\" />\n *     <Menu.Item icon=\"undo\" onPress={() => {}} title=\"Undo\" />\n *     <Menu.Item icon=\"content-cut\" onPress={() => {}} title=\"Cut\" disabled />\n *     <Menu.Item icon=\"content-copy\" onPress={() => {}} title=\"Copy\" disabled />\n *     <Menu.Item icon=\"content-paste\" onPress={() => {}} title=\"Paste\" />\n *   </View>\n * );\n *\n * export default MyComponent;\n * ```\n */\n\nvar MenuItem = /*#__PURE__*/function (_React$Component) {\n  _inherits(MenuItem, _React$Component);\n\n  var _super = _createSuper(MenuItem);\n\n  function MenuItem() {\n    _classCallCheck(this, MenuItem);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MenuItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          icon = _this$props.icon,\n          title = _this$props.title,\n          disabled = _this$props.disabled,\n          onPress = _this$props.onPress,\n          theme = _this$props.theme,\n          style = _this$props.style,\n          testID = _this$props.testID,\n          titleStyle = _this$props.titleStyle;\n      var disabledColor = color(theme.dark ? white : black).alpha(0.32).rgb().string();\n      var titleColor = disabled ? disabledColor : color(theme.colors.text).alpha(0.87).rgb().string();\n      var iconColor = disabled ? disabledColor : color(theme.colors.text).alpha(0.54).rgb().string();\n      return /*#__PURE__*/React.createElement(TouchableRipple, {\n        style: [styles.container, style],\n        onPress: onPress,\n        disabled: disabled,\n        testID: testID\n      }, /*#__PURE__*/React.createElement(View, {\n        style: styles.row\n      }, icon ? /*#__PURE__*/React.createElement(View, {\n        style: [styles.item, styles.icon],\n        pointerEvents: \"box-none\"\n      }, /*#__PURE__*/React.createElement(Icon, {\n        source: icon,\n        size: 24,\n        color: iconColor\n      })) : null, /*#__PURE__*/React.createElement(View, {\n        style: [styles.item, styles.content, icon ? styles.widthWithIcon : null],\n        pointerEvents: \"none\"\n      }, /*#__PURE__*/React.createElement(Text, {\n        numberOfLines: 1,\n        style: [styles.title, {\n          color: titleColor\n        }, titleStyle]\n      }, title))));\n    }\n  }]);\n\n  return MenuItem;\n}(React.Component);\n\n_defineProperty(MenuItem, \"displayName\", 'Menu.Item');\n\nvar minWidth = 112;\nvar maxWidth = 280;\nvar iconWidth = 40;\nvar styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 8,\n    minWidth: minWidth,\n    maxWidth: maxWidth,\n    height: 48,\n    justifyContent: 'center'\n  },\n  row: {\n    flexDirection: 'row'\n  },\n  icon: {\n    width: iconWidth\n  },\n  title: {\n    fontSize: 16\n  },\n  item: {\n    marginHorizontal: 8\n  },\n  content: {\n    justifyContent: 'center',\n    minWidth: minWidth - 16,\n    maxWidth: maxWidth - 16\n  },\n  widthWithIcon: {\n    maxWidth: maxWidth - (iconWidth + 48)\n  }\n});\nexport default withTheme(MenuItem); // @component-docs ignore-next-line\n\nexport { MenuItem };","map":null,"metadata":{},"sourceType":"module"}